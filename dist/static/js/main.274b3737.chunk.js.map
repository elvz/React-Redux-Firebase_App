{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/tasks/TaskSummary.js","components/tasks/TaskList.js","components/dashboard/Dashboard.js","components/tasks/TaskDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","store/actions/taskActions.js","components/tasks/CreateTask.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/taskReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","catch","err","props","react_default","a","createElement","className","react_router_dom","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","TaskSummary","_ref","task","title","authorFirstName","authorLastName","createdAt","calendar","TaskList","tasks","tasks_TaskSummary","Dashboard","_this$props","this","tasks_TaskList","dashboard_Notifications","react_router","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","createTask","authorId","add","objectSpread","Date","CreateTask","history","push","App","layout_Navbar","exact","path","component","TaskDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","taskReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.274b3737.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signOut } from '../../store/actions/authActions';\r\n\r\nconst SignedInLinks = (props) => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/createtask'>Нове Завдання</NavLink></li>\r\n            <li><a onClick={() => props.signOut()}>Вийти</a></li>\r\n            <li><NavLink to='/' className=\"btn btn-floating pink lighten-1\">\r\n               {props.profile.initials} \r\n            </NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks);","export const signIn = (credentials) => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({ type: 'LOGIN_SUCCESS' });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'LOGIN_ERROR', err });\r\n        });\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({ type: 'SIGNOUT_SUCCESS' });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'SIGNOUT_ERROR' });\r\n        });\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((resp) => {\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0]\r\n            })\r\n        }).then(() => {\r\n            dispatch({ type: 'SIGNUP_SUCCESS' })\r\n        }).catch((err) => {\r\n            dispatch({ type: 'SIGNUP_ERROR', err })\r\n        })\r\n    }\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SignedOutLinks = () => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/signup'>Реєстрація</NavLink></li>\r\n            <li><NavLink to='/signin'>Увійти</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SignedInLinks from './SignedInLinks';\r\nimport SignedOutLinks from './SignedOutLinks';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Navbar = (props) => {\r\n    const { auth, profile } = props;\r\n    // console.log(auth);\r\n    const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />;\r\n    return (\r\n        <div className=\"navbar-fixed\">\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to='/' className=\"left brand-logo\">FzWs</Link>\r\n                { links }\r\n            </div>\r\n        </nav>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state);\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst Notifications = (props) => {\r\n    const { notifications } = props;\r\n    return (\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Всі Сповіщення</span>\r\n                    <ul className=\"notifications\">\r\n                        { notifications && notifications.map(item => {\r\n                            return (\r\n                                <li key={item.id}>\r\n                                    <span className=\"pink-text\">{item.user} </span>\r\n                                    <span>{item.content}</span>\r\n                                    <div className=\"grey-text note-date\">\r\n                                        {moment(item.time.toDate()).fromNow()}\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        }) }\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications;\r\n","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst TaskSummary =({task}) => {\r\n    return (\r\n        <div className=\"card z-depth-0 task-summary\">\r\n            <div className=\"card-content grey-text text-darken-3\">\r\n                <span className=\"card-title\">{task.title}</span>\r\n                <p>Опублікував {task.authorFirstName} {task.authorLastName}</p>\r\n                <p className=\"grey-text\">{moment(task.createdAt.toDate()).calendar()}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskSummary;","import React from 'react';\r\nimport TaskSummary from './TaskSummary';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst TaskList = ({tasks}) => {\r\n    return (\r\n        <div className=\"task-list section\">\r\n            { tasks && tasks.map(task => {\r\n                return (\r\n                    <Link to={'/task/' + task.id} key={task.id}>\r\n                        <TaskSummary task={task} />\r\n                    </Link>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskList;","import React, { Component } from 'react';\r\nimport Notifications from './Notifications';\r\nimport TaskList from '../tasks/TaskList';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Dashboard extends Component {\r\n    render() {\r\n        // console.log(this.props)\r\n        const { tasks, auth, notifications } = this.props;\r\n        if (!auth.uid) return (<Redirect to='/signin' />)\r\n\r\n        return (\r\n            <div className=\"dasboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <TaskList tasks={tasks} />\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notifications notifications={notifications} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state);\r\n    return {\r\n       tasks: state.firestore.ordered.tasks,\r\n       auth: state.firebase.auth,\r\n       notifications: state.firestore.ordered.notifications\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {collection: 'tasks', orderBy: ['createdAt', 'desc']},\r\n        {collection: 'notifications', limit: 3, orderBy: ['time', 'desc']}\r\n    ])\r\n)(Dashboard);","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nconst TaskDetails = (props) => {\r\n  const { task, auth } =  props;\r\n  if (!auth.uid) return (<Redirect to='/signin' />)\r\n  if (task) {\r\n    return (\r\n      <div className=\"container section task-details\">\r\n        <div className=\"card z-depth-0\">\r\n          <div className=\"card-content\">\r\n            <span className=\"card-title\">{ task.title }</span>\r\n            <p>{ task.content }</p>\r\n          </div>\r\n          <div className=\"card-action grey lighten-4 grey-text\">\r\n            <div>Опублікував {task.authorFirstName} {task.authorLastName}</div>\r\n            <div>{moment(task.createdAt.toDate()).calendar()}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <div className=\"container center\">\r\n        <p>Завантаження завдання...</p>\r\n      </div>  \r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  console.log(state);\r\n  const id = ownProps.match.params.id;\r\n  const tasks = state.firestore.data.tasks;\r\n  const task = tasks ? tasks[id] : null;\r\n  return {\r\n    task: task,\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: 'tasks' }\r\n  ])\r\n)(TaskDetails)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { signIn } from '../../store/actions/authActions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state)\r\n    }\r\n  render() {\r\n      const { authError, auth } = this.props;\r\n      if (auth.uid) return (<Redirect to='/' />)\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n            <h5 className=\"grey-text text-darken-3\">Вхід</h5>\r\n            <div className=\"input-field\">\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n            </div>\r\n            <div className=\"input-field\">\r\n                <label htmlFor=\"password\">Пароль</label>\r\n                <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n            </div>\r\n            <div className=\"input-field\">\r\n                <button className=\"btn pink lighten-1 z-depth-0\">Увійти</button>\r\n                <div className=\"red-text center\">\r\n                    { authError ? <p>{authError}</p> : null }\r\n                </div>\r\n            </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signUp } from '../../store/actions/authActions';\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signUp(this.state);\r\n    }\r\n  render() {\r\n    const { auth, authError } = this.props;\r\n    if (auth.uid) return (<Redirect to='/' />)\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n            <h5 className=\"grey-text text-darken-3\">Новий Користувач</h5>\r\n            <div className=\"input-field\">\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n            </div>\r\n            <div className=\"input-field\">\r\n                <label htmlFor=\"password\">Пароль</label>\r\n                <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n            </div>\r\n            <div className=\"input-field\">\r\n                <label htmlFor=\"firstName\">Ім'я</label>\r\n                <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\r\n            </div>\r\n            <div className=\"input-field\">\r\n                <label htmlFor=\"lastName\">Прізвище</label>\r\n                <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\r\n            </div>\r\n            <div className=\"input-field\">\r\n                <button className=\"btn pink lighten-1 z-depth-0\">Реєстрація</button>\r\n                <div className=\"red-text center\">\r\n                    { authError ? <p>{ authError }</p> : null }\r\n                </div>\r\n            </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n\r\n","const createTask = (task) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n        firestore.collection('tasks').add({\r\n            ...task,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({ type: 'CREATE_TASK', task });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'CREATE_TASK_ERROR', err });\r\n        }) \r\n    }\r\n};\r\n\r\nexport default createTask;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport createTask from '../../store/actions/taskActions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass CreateTask extends Component {\r\n    state = {\r\n        title: '',\r\n        content: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // console.log(this.state);\r\n        this.props.createTask(this.state);\r\n        this.props.history.push('/');\r\n    }\r\n  render() {\r\n      const { auth } = this.props;\r\n      if (!auth.uid) return (<Redirect to='/signin' />)\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n            <h5 className=\"grey-text text-darken-3\">Нове Завдання</h5>\r\n            <div className=\"input-field\">\r\n                <label htmlFor=\"title\">Заголовок</label>\r\n                <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\r\n            </div>\r\n            <div className=\"input-field\">\r\n                <label htmlFor=\"content\">Опис</label>\r\n                <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n            </div>\r\n            <div className=\"input-field\">\r\n                <button className=\"btn pink lighten-1 z-depth-0\">Створити</button>\r\n            </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createTask: (task) => dispatch(createTask(task))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateTask);\r\n","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport TaskDetails from './components/tasks/TaskDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateTask from './components/tasks/CreateTask';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path='/' component={Dashboard} />\n            <Route path='/task/:id' component={TaskDetails} />\n            <Route path='/signin' component={SignIn} />\n            <Route path='/signup' component={SignUp} />\n            <Route path='/createtask' component={CreateTask} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/* eslint-disable no-fallthrough */\r\nconst initState = {\r\n    authError: null\r\n};\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    // eslint-disable-next-line default-case\r\n    switch (action.type) {\r\n        case 'LOGIN_ERROR':\r\n            console.log('login error');\r\n            return {\r\n                ...state,\r\n                authError: 'Login failed'\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('login success');\r\n            return {\r\n                authError: null\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('signout success');\r\n            return state;\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signup success');\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            console.log('signup error');\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default authReducer;","const initState = {};\r\n\r\nconst taskReducer = (state = initState, action) => {\r\n    // eslint-disable-next-line default-case\r\n    switch (action.type) {\r\n        case 'CREATE_TASK':\r\n            console.log('created task', action.task);\r\n            return state;\r\n        case 'CREATE_TASK_ERROR':\r\n            console.log(' create task error', action.err);\r\n            return state;\r\n        default: \r\n           return state; \r\n    }\r\n}\r\n\r\nexport default taskReducer;","import authReducer from './authReducer';\r\nimport taskReducer from './taskReducer';\r\nimport { combineReducers } from 'redux';\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    task: taskReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer;","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyCYn8r2SNwG6XSwycikacxK_5zUjF9Uvfw\",\r\n    authDomain: \"fozzy-wariors.firebaseapp.com\",\r\n    databaseURL: \"https://fozzy-wariors.firebaseio.com\",\r\n    projectId: \"fozzy-wariors\",\r\n    storageBucket: \"fozzy-wariors.appspot.com\",\r\n    messagingSenderId: \"29343723880\",\r\n    appId: \"1:29343723880:web:a43c931ae0447d27\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  firebase.firestore().settings({ timestampsInSnapshots: true });\r\n\r\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig';\n\nconst store = createStore(rootReducer, \n    compose(\n        applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})), \n        reduxFirestore(fbConfig), \n        reactReduxFirebase(fbConfig, {useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true})\n    )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(\n        <Provider store={store}>\n            <App />\n        </Provider>, \n        document.getElementById('root'));\n    \n    // If you want your app to work offline and load faster, you can change\n    // unregister() to register() below. Note this comes with some pitfalls.\n    // Learn more about service workers: https://bit.ly/CRA-PWA\n    serviceWorker.unregister();\n})\n\n\n"],"sourceRoot":""}